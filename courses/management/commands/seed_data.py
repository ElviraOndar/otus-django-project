from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from courses.models import Course, Enrollment
from schedule.models import Lesson
from django.utils import timezone
from datetime import timedelta

User = get_user_model()


class Command(BaseCommand):
    help = "–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (2 —É—á–∏—Ç–µ–ª—è, 6 —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, 2 –∫—É—Ä—Å–∞ –∏ —É—Ä–æ–∫–∏)."

    def add_arguments(self, parser):
        parser.add_argument(
            "--flush",
            action="store_true",
            help="–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (—É—á–∏—Ç–µ–ª—è, —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –∫—É—Ä—Å—ã, —É—Ä–æ–∫–∏, –∑–∞–ø–∏—Å–∏).",
        )

    def handle(self, *args, **options):
        if options["flush"]:
            self._flush_data()
            self.stdout.write(self.style.WARNING("üóë –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã."))
            return

        # --- –£—á–∏—Ç–µ–ª—è ---
        teacher1, created = User.objects.get_or_create(
            username="teacher1",
            defaults={
                "email": "teacher1@example.com",
                "is_teacher": True,
                "first_name": "Alice",
                "last_name": "Johnson",
            }
        )
        if created:
            teacher1.set_password("password123")
            teacher1.save()

        teacher2, created = User.objects.get_or_create(
            username="teacher2",
            defaults={
                "email": "teacher2@example.com",
                "is_teacher": True,
                "first_name": "Bob",
                "last_name": "Smith",
            }
        )
        if created:
            teacher2.set_password("password123")
            teacher2.save()

        # --- –°—Ç—É–¥–µ–Ω—Ç—ã ---
        students = []
        student_names = [
            ("student1", "John", "Doe"),
            ("student2", "Jane", "Doe"),
            ("student3", "Michael", "Brown"),
            ("student4", "Emily", "Davis"),
            ("student5", "Daniel", "Wilson"),
            ("student6", "Sophia", "Taylor"),
        ]

        for username, first_name, last_name in student_names:
            student, created = User.objects.get_or_create(
                username=username,
                defaults={
                    "email": f"{username}@example.com",
                    "is_teacher": False,
                    "first_name": first_name,
                    "last_name": last_name,
                }
            )
            if created:
                student.set_password("password123")
                student.save()
            students.append(student)

        # --- –ö—É—Ä—Å—ã ---
        course1, _ = Course.objects.get_or_create(
            title="Python Basics",
            defaults={"description": "–ö—É—Ä—Å –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Ç–æ–ª—å–∫–æ –¥–µ–ª–∞—é—Ç –ø–µ—Ä–≤—ã–µ —à–∞–≥–∏ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏. –í—ã –æ—Å–≤–æ–∏—Ç–µ –æ—Å–Ω–æ–≤—ã —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Python, –Ω–∞—É—á–∏—Ç–µ—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏, —É—Å–ª–æ–≤–∏—è–º–∏, —Ü–∏–∫–ª–∞–º–∏, —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∏ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ–º–æ–≥—É—Ç –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Ç–µ–æ—Ä–∏—é –∏ —Å—Ä–∞–∑—É —É–≤–∏–¥–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ü–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –∫—É—Ä—Å–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å –ø—Ä–æ—Å—Ç—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã –∫ –¥–∞–ª—å–Ω–µ–π—à–µ–º—É –∏–∑—É—á–µ–Ω–∏—é Python –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.", "teacher": teacher1}
        )
        course2, _ = Course.objects.get_or_create(
            title="Django Web Development",
            defaults={"description": "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –∫—É—Ä—Å –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ Django. –í—ã –Ω–∞—É—á–∏—Ç–µ—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å –º–æ–¥–µ–ª—è–º–∏ –∏ ORM, –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ñ–æ—Ä–º—ã –∏ –∞–¥–º–∏–Ω–∫—É, –∞ —Ç–∞–∫–∂–µ –ø–∏—Å–∞—Ç—å —Å–≤–æ–∏ API. –†–∞–∑–±–µ—Ä—ë–º –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—é, —à–∞–±–ª–æ–Ω—ã, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∏ —Ä–∞–±–æ—Ç—É —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏. –ò—Ç–æ–≥–æ–º –∫—É—Ä—Å–∞ —Å—Ç–∞–Ω–µ—Ç –≥–æ—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç ‚Äî –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ Django, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", "teacher": teacher2}
        )

        # --- –£—Ä–æ–∫–∏ ---
        Lesson.objects.get_or_create(
            course=course1,
            title="–í–≤–µ–¥–µ–Ω–∏–µ –≤ Python",
            teacher=teacher1,
            start_time=timezone.now().replace(hour=10, minute=0, second=0, microsecond=0) + timedelta(days=1),
            end_time=timezone.now().replace(hour=12, minute=0, second=0, microsecond=0) + timedelta(days=1),
        )
        Lesson.objects.get_or_create(
            course=course1,
            title="–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –≤ Python",
            teacher=teacher1,
            start_time=timezone.now().replace(hour=10, minute=0, second=0, microsecond=0) + timedelta(days=2),
            end_time=timezone.now().replace(hour=12, minute=0, second=0, microsecond=0) + timedelta(days=2),
        )

        Lesson.objects.get_or_create(
            course=course2,
            title="–í–≤–µ–¥–µ–Ω–∏–µ –≤ Django",
            teacher=teacher2,
            start_time=timezone.now().replace(hour=18, minute=0, second=0, microsecond=0) + timedelta(days=3),
            end_time=timezone.now().replace(hour=20, minute=0, second=0, microsecond=0) + timedelta(days=3),
        )
        Lesson.objects.get_or_create(
            course=course2,
            title="–ú–æ–¥–µ–ª–∏ –∏ ORM –≤ Django",
            teacher=teacher2,
            start_time=timezone.now().replace(hour=18, minute=0, second=0, microsecond=0) + timedelta(days=4),
            end_time=timezone.now().replace(hour=20, minute=0, second=0, microsecond=0) + timedelta(days=4),
        )

        # --- –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–∞ –∫—É—Ä—Å—ã ---
        for student in students:
            Enrollment.objects.get_or_create(student=student, course=course1)
            Enrollment.objects.get_or_create(student=student, course=course2)

        self.stdout.write(self.style.SUCCESS("‚úÖ Seed data —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!"))

    def _flush_data(self):
        """–£–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –Ω–µ —Ç—Ä–æ–≥–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ."""
        Enrollment.objects.filter(student__username__startswith="student").delete()
        Lesson.objects.filter(course__title__in=["Python Basics", "Django Web Development"]).delete()
        Course.objects.filter(title__in=["Python Basics", "Django Web Development"]).delete()
        User.objects.filter(username__in=["teacher1", "teacher2"]).delete()
        User.objects.filter(username__startswith="student").delete()